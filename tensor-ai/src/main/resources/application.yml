spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/${DB_NAME}
    username: ${USERNAME}
    password: ${PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true
    database: postgresql

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
              - openid

gemini:
  api:
    url: https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=
    key: ${GEMINI_API_KEY}
